From 284d0ae4d3dccff021dea5286f1c988d57f98158 Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Fri, 17 Apr 2020 12:44:15 +0300
Subject: [PATCH] Allow compositor specializations to override the composite

Original author: Andrew den Exter <andrew.den.exter@qinetic.com.au>
SHA1: ba21a8694e261769fa53e54a846eeaa651826769

Signed-off-by: Raine Makelainen <raine.makelainen@jolla.com>
---
 gfx/layers/ipc/CompositorBridgeParent.cpp | 16 +++++++++++++---
 gfx/layers/ipc/CompositorBridgeParent.h   |  1 +
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/gfx/layers/ipc/CompositorBridgeParent.cpp b/gfx/layers/ipc/CompositorBridgeParent.cpp
index 6728e8841a9a..9583bf621392 100644
--- a/gfx/layers/ipc/CompositorBridgeParent.cpp
+++ b/gfx/layers/ipc/CompositorBridgeParent.cpp
@@ -483,7 +483,7 @@ CompositorVsyncScheduler::Composite(TimeStamp aVsyncTimestamp)
   if (mNeedsComposite || mAsapScheduling) {
     mNeedsComposite = 0;
     mLastCompose = aVsyncTimestamp;
-    ComposeToTarget(nullptr);
+    mCompositorBridgeParent->CompositeToDefaultTarget();
     mVsyncNotificationsSkipped = 0;
 
     TimeDuration compositeFrameTotal = TimeStamp::Now() - aVsyncTimestamp;
@@ -571,7 +571,7 @@ CompositorVsyncScheduler::ResumeComposition()
 {
   MOZ_ASSERT(CompositorThreadHolder::IsInCompositorThread());
   mLastCompose = TimeStamp::Now();
-  ComposeToTarget(nullptr);
+  mCompositorBridgeParent->CompositeToDefaultTarget();
 }
 
 void
@@ -579,7 +579,11 @@ CompositorVsyncScheduler::ComposeToTarget(gfx::DrawTarget* aTarget, const IntRec
 {
   MOZ_ASSERT(CompositorThreadHolder::IsInCompositorThread());
   MOZ_ASSERT(mCompositorBridgeParent);
-  mCompositorBridgeParent->CompositeToTarget(aTarget, aRect);
+  if (aTarget) {
+    mCompositorBridgeParent->CompositeToTarget(aTarget, aRect);
+  } else {
+    mCompositorBridgeParent->CompositeToDefaultTarget();
+  }
 }
 
 static inline MessageLoop*
@@ -1165,6 +1169,12 @@ CompositorBridgeParent::SetShadowProperties(Layer* aLayer)
     );
 }
 
+void
+CompositorBridgeParent::CompositeToDefaultTarget()
+{
+  CompositeToTarget(nullptr);
+}
+
 void
 CompositorBridgeParent::CompositeToTarget(DrawTarget* aTarget, const gfx::IntRect* aRect)
 {
diff --git a/gfx/layers/ipc/CompositorBridgeParent.h b/gfx/layers/ipc/CompositorBridgeParent.h
index cd4f5fafb0c2..97c5050d2260 100644
--- a/gfx/layers/ipc/CompositorBridgeParent.h
+++ b/gfx/layers/ipc/CompositorBridgeParent.h
@@ -518,6 +518,7 @@ public:
   widget::CompositorWidget* GetWidget() { return mWidget; }
 
   void ForceComposeToTarget(gfx::DrawTarget* aTarget, const gfx::IntRect* aRect = nullptr);
+  virtual void CompositeToDefaultTarget();
 
   PAPZCTreeManagerParent* AllocPAPZCTreeManagerParent(const uint64_t& aLayersId) override;
   bool DeallocPAPZCTreeManagerParent(PAPZCTreeManagerParent* aActor) override;
-- 
2.25.2

