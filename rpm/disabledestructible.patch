Can be removed after update to 33.

diff -ru xulrunner-qt5-31.0.0.25/mfbt/Attributes.h xulrunner-qt5-31.0.0.25-disabledestructible/mfbt/Attributes.h
--- xulrunner-qt5-31.0.0.25/mfbt/Attributes.h	2014-10-09 08:32:04.964000000 +0000
+++ xulrunner-qt5-31.0.0.25-disabledestructible/mfbt/Attributes.h	2014-11-25 20:35:09.811473000 +0000
@@ -76,7 +76,9 @@
 #elif defined(__GNUC__)
 #  if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
 #    if MOZ_GCC_VERSION_AT_LEAST(4, 7, 0)
+#if 0
 #      define MOZ_HAVE_CXX11_OVERRIDE
+#endif
 #      define MOZ_HAVE_CXX11_FINAL       final
 #    endif
 #    if MOZ_GCC_VERSION_AT_LEAST(4, 6, 0)
diff -ru xulrunner-qt5-31.0.0.25/xpcom/glue/nsISupportsImpl.h xulrunner-qt5-31.0.0.25-disabledestructible/xpcom/glue/nsISupportsImpl.h
--- xulrunner-qt5-31.0.0.25/xpcom/glue/nsISupportsImpl.h	2014-10-09 08:32:06.396000000 +0000
+++ xulrunner-qt5-31.0.0.25-disabledestructible/xpcom/glue/nsISupportsImpl.h	2014-11-25 20:12:01.447473000 +0000
@@ -35,7 +35,8 @@
   static const bool value = false;
 };
 }
-
+// This causes it to not build under gcc 4.8.
+#if 0
 #if defined(__clang__)
    // bug 1028428 shows that at least in FreeBSD 10.0 with Clang 3.4 and libc++ 3.4,
    // std::is_destructible is buggy in that it returns false when it should return true
@@ -52,6 +53,7 @@
 #    define MOZ_CAN_USE_IS_DESTRUCTIBLE_FALLBACK
 #  endif
 #endif
+#endif
 
 #ifdef MOZ_HAVE_STD_IS_DESTRUCTIBLE
 #  include <type_traits>
