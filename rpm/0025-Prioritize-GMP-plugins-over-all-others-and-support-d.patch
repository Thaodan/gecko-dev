From e5986ef318fc2e8ef6054d0dfffb5c06fb6aac45 Thu, 25 Jun 2020 00:23:07 +0200
From: Andrew Branson <andrew.branson@jolla.com>
Date: Wed, 24 Jun 2020 07:56:50 +0200
Subject: [PATCH] Prioritize GMP plugins over all others, and support decoding video for h264, vp8 & vp9.

Automatically load gmp-droid at startup

diff --git a/dom/media/platforms/PDMFactory.cpp b/dom/media/platforms/PDMFactory.cpp
index d486966..3f9e529 100644
--- a/dom/media/platforms/PDMFactory.cpp
+++ b/dom/media/platforms/PDMFactory.cpp
@@ -364,7 +364,12 @@
     // can stop creating more PDM from this point.
     return;
   }
-
+  if (MediaPrefs::PDMGMPEnabled()) {
+    m = new GMPDecoderModule();
+    mGMPPDMFailedToStartup = !StartupPDM(m);
+  } else {
+    mGMPPDMFailedToStartup = false;
+  }
 #ifdef MOZ_WIDGET_ANDROID
   if(MediaPrefs::PDMAndroidMediaCodecPreferred() &&
      MediaPrefs::PDMAndroidMediaCodecEnabled()) {
@@ -425,12 +430,7 @@
   m = new AgnosticDecoderModule();
   StartupPDM(m);
 
-  if (MediaPrefs::PDMGMPEnabled()) {
-    m = new GMPDecoderModule();
-    mGMPPDMFailedToStartup = !StartupPDM(m);
-  } else {
-    mGMPPDMFailedToStartup = false;
-  }
+
 }
 
 void
diff --git a/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp b/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp
index 77baef0..c16d4fd 100644
--- a/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp
+++ b/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp
@@ -179,12 +179,23 @@
 GMPDecoderModule::SupportsMimeType(const nsACString& aMimeType,
                                    DecoderDoctorDiagnostics* aDiagnostics) const
 {
-  const Maybe<nsCString> preferredGMP = PreferredGMP(aMimeType);
-  bool rv = SupportsMimeType(aMimeType, preferredGMP);
-  if (rv && aDiagnostics && preferredGMP.isSome()) {
-    aDiagnostics->SetGMP(preferredGMP.value());
+#if defined(MOZ_FMP4)
+  if (MP4Decoder::IsH264(aMimeType)) {
+    return HaveGMPFor(NS_LITERAL_CSTRING(GMP_API_VIDEO_DECODER),
+                      { NS_LITERAL_CSTRING("h264") });
   }
-  return rv;
+#endif
+
+  if (VPXDecoder::IsVP9(aMimeType)) {
+    return HaveGMPFor(NS_LITERAL_CSTRING(GMP_API_VIDEO_DECODER),
+                      { NS_LITERAL_CSTRING("vp9") });
+  }
+
+  if (VPXDecoder::IsVP8(aMimeType)) {
+    return HaveGMPFor(NS_LITERAL_CSTRING(GMP_API_VIDEO_DECODER),
+                      { NS_LITERAL_CSTRING("vp8") });
+  }
+  return false;
 }
 
 } // namespace mozilla
diff --git a/toolkit/mozapps/extensions/internal/GMPProvider.jsm b/toolkit/mozapps/extensions/internal/GMPProvider.jsm
index 9bb34a7..65ea8eb 100644
--- a/toolkit/mozapps/extensions/internal/GMPProvider.jsm
+++ b/toolkit/mozapps/extensions/internal/GMPProvider.jsm
@@ -39,6 +39,8 @@
 const NS_GRE_DIR             = "GreD";
 const CLEARKEY_PLUGIN_ID     = "gmp-clearkey";
 const CLEARKEY_VERSION       = "0.1";
+const DROID_PLUGIN_ID        = "gmp-droid";
+const DROID_VERSION          = "0.1";
 
 const GMP_LICENSE_INFO       = "gmp_license_info";
 const GMP_PRIVACY_INFO       = "gmp_privacy_info";
@@ -588,6 +590,19 @@
     } catch (e) {
       this._log.warn("startup - adding clearkey CDM failed", e);
     }
+
+    try {
+      let greDir = Services.dirsvc.get(NS_GRE_DIR,
+                                       Ci.nsILocalFile);
+      let droidPath = OS.Path.join(greDir.path,
+                                      DROID_PLUGIN_ID,
+                                      DROID_VERSION);
+      this._log.info("startup - adding droidmedia GMP directory " +
+                     droidPath);
+      gmpService.addPluginDirectory(droidPath);
+    } catch (e) {
+      this._log.warn("startup - adding droidmedia GMP failed", e);
+    }
   },
 
   shutdown: function() {
 