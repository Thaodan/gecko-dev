From 2b29801ed614eaf08fd028cda6918c42b80577e7 Mon Sep 17 00:00:00 2001
From: Dmitry Rozhkov <dmitry.rozhkov@jolla.com>
Date: Mon, 11 May 2015 15:27:51 +0300
Subject: [PATCH 16/16] Enable external window usage

---
 gfx/gl/GLContextProviderEGL.cpp     |  4 ++++
 gfx/layers/opengl/CompositorOGL.cpp | 11 +++++++++++
 2 files changed, 15 insertions(+)

diff --git a/gfx/gl/GLContextProviderEGL.cpp b/gfx/gl/GLContextProviderEGL.cpp
index e6d89bf..417bd4e 100644
--- a/gfx/gl/GLContextProviderEGL.cpp
+++ b/gfx/gl/GLContextProviderEGL.cpp
@@ -700,6 +700,10 @@ GLContextProviderEGL::CreateWrappingExisting(void* aContext, void* aSurface)
         return nullptr;
     }
 
+    // TODO as soon context and surface guaranteed to be non-null
+    aSurface = aSurface ? aSurface : sEGLLibrary.fGetCurrentSurface(LOCAL_EGL_DRAW);
+    aContext = aContext ? aContext : sEGLLibrary.fGetCurrentContext();
+
     if (aContext && aSurface) {
         SurfaceCaps caps = SurfaceCaps::Any();
         EGLConfig config = EGL_NO_CONFIG;
diff --git a/gfx/layers/opengl/CompositorOGL.cpp b/gfx/layers/opengl/CompositorOGL.cpp
index 0b85a2d..6ea17ef 100644
--- a/gfx/layers/opengl/CompositorOGL.cpp
+++ b/gfx/layers/opengl/CompositorOGL.cpp
@@ -185,6 +185,17 @@ CompositorOGL::CreateContext()
   }
 #endif
 
+  // If widget has active GL context then we can try to wrap it into Moz GL Context.
+  // Allow widget to create opengl context for the compositor thread and
+  // using surface of an external window.
+  if (PR_GetEnv("MOZ_USE_EXTERNAL_WINDOW") && mWidget->HasGLContext()) {
+    context = GLContextProvider::CreateWrappingExisting(nullptr, nullptr);
+    if (!context || !context->Init()) {
+      NS_WARNING("Failed to create embedded context");
+      context = nullptr;
+    }
+  }
+
   // Allow to create offscreen GL context for main Layer Manager
   if (!context && PR_GetEnv("MOZ_LAYERS_PREFER_OFFSCREEN")) {
     SurfaceCaps caps = SurfaceCaps::ForRGB();
-- 
1.9.1

